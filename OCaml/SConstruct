# -*- mode:python; coding:utf-8; -*-

#  Calculation of π using quadrature.
#
#  Copyright © 2008–2013  Russel Winder

import os
import sys
sys.path.append('../site_scons')

from executablesupport import addCompileTarget, addRunTarget, createHelp

ocamlEnvironment = Environment(tools=[])  #, ENV=os.environ)

for item in Glob('pi_*.ml'):
    root = os.path.splitext(item.name)[0]
    extraOptions = ''
    variant = root.split('_')[1]
    if variant == 'threads':
        extraOptions = '-thread unix.cmxa threads.cmxa'
    if variant == 'mpi':
        extraOptions = '-I ' + os.environ['OCAMLMPI_HOME'] + ' mpi.cmxa unix.cmxa'  #  These programs get run as sequential ones from SCons.  Use the command "mpirun -np N . . . " to run the code on N processors.
    addRunTarget(ocamlEnvironment,
        addCompileTarget(ocamlEnvironment.Command(root, item.name, 'ocamlopt -o $TARGET {} $SOURCE'.format(extraOptions))))
    SideEffect([root + '.' + extension for extension in ['cmi', 'cmx', 'o']], root)

Help(createHelp())
