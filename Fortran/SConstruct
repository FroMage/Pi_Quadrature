# -*- mode:python; coding:utf-8; -*-

#  Calculation of Pi using quadrature.
#
#  Copyright © 2008–2013 Russel Winder

import os
import sys
sys.path.append('../site_scons')

from executablesupport import compileTargets, addCompileTarget, runTargets, addRunTarget, executables, createHelp

fortranFlags = ['-O3', '-std=f2008', '-ffree-form', '-pedantic', '-Wall']

fortranEnvironment = Environment(tools=['gfortran', 'gnulink'], FORTRANFLAGS=fortranFlags)

fortranOutput = fortranEnvironment.Object('output.f')

def fortranRule(globPattern, compiler='gfortran', fortranflags=fortranFlags, linkflags=[], libpath=[], libs=[]):
    for item in Glob(globPattern):
        executables.append(
            addCompileTarget(
                fortranEnvironment.Program(
                    os.path.splitext(item.name)[0], [item.name, fortranOutput],
                    FORTRAN=compiler, FORTRANFLAGS=fortranflags, LINKFLAGS=linkflags, LIBPATH=libpath, LIBS=libs)))

fortranRule('pi_sequential*.f')
fortranRule('pi_openmp*.f', fortranflags=fortranFlags + ['-fopenmp'], libs=['gomp'])
fortranRule('pi_mpi*.f', compiler='mpif90')

for item in executables:
    addRunTarget(Command('run_' + item[0].name, item, './' + item[0].name))

Help(createHelp())
