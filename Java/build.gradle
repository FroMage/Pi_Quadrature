apply plugin: 'java'

apply plugin: 'eclipse'
apply plugin: 'idea'

repositories {
    mavenLocal()
    mavenCentral()
    flatDir { dirs System.properties.'user.home' + '/lib/Java/DataRush/lib' }
}

dependencies {
    compile 'org.codehaus.jcsp:jcsp:1.1-rc5'
    compile 'org.codehaus.gpars:gpars:1.0.0'
    compile 'org.codehaus.groovy:groovy-all:2.1.1'
    compile 'org.functionaljava:functionaljava:3.1'
    compile ':datarush-library:5.1.0-49'
}

sourceCompatibility = '8'

defaultTasks 'classes'

new File("${projectDir}/src/main/java/uk/org/winder/pi_quadrature").eachFileMatch(~/Pi_.*\.java/) { filename ->
    final root = filename.name.replaceFirst(/\.java$/, '')
    final className = 'uk.org.winder.pi_quadrature.' + root
    task ('run_' + root, dependsOn: 'classes') << {
        final process = ("java -cp build/classes/main ${className}").execute()
        process.in.eachLine{line -> println line}
        assert process.waitFor() == 0
    }
}

task wrapper (type:Wrapper) {
    gradleVersion = '1.4'
}

idea {
    module {
        excludeDirs += file('gradle/') // Gradle directory including the wrapper subdirectory.
        excludeDirs += file('.settings/') // Eclipse settings directory.
        excludeDirs += file('bin') // Eclipse compilation directory.
        excludeDirs += file('out') // IDEA compilation directory.
        excludeDirs += file('build') // Gradle compilation directory.
        excludeDirs += file('docs') // Jon's book directory
    }
    project {
        jdkName '1.8_L'
        languageLevel '1.8'
        ipr {
            withXml { provider ->
                def node = provider.asNode()
                node.component.find{it.'@name' == 'VcsDirectoryMappings'}.mapping[0].'@vcs' = 'Git'
            }
        }
    }
}
