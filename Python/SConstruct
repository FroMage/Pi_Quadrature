# -*- mode:python; coding:utf-8; -*-

#  Calculation of π using quadrature.
#
#  Copyright © 2008–2014  Russel Winder

#  Some of the Python code relies on extensions written in various languages.
#
#  Cython and Pyrex need access to the Python headers when compiling the generated C and so are Python
#  version dependent.

import os
from os.path import splitext

os_name = os.uname()[0]

if os_name == 'Darwin':
    cython_command_name = 'cython'
    python_include_path = (
        # MacPorts location of Python 3.4 header files.
        '/opt/local/Library/Frameworks/Python.framework/Versions/3.4/include/python3.4m',
    )
elif os_name == 'Linux':
    cython_command_name = 'cython3'
    python_include_path = (
        # Debian and Fedora location of Python 3.4 header files.
        '/usr/include/python3.4m',
    )
else:
    print 'Unknown platform.'
    Exit(1)

cEnvironment = Environment(
    tools=['gcc', 'gnulink'],
    CPPPATH=[],
    CFLAGS=['-std=c11', '-O3', '-Wall', '-Wextra'],
    LINKFLAGS=[],
    SHLIBPREFIX='',
)

cythonEnvironment = cEnvironment.Clone()
cythonEnvironment.Append(CPPPATH=python_include_path, CFLAGS=['-fopenmp'], LIBS=['-lgomp'])

cppEnvironment = Environment(
    tools=['g++', 'gnulink'],
    CPPPATH=[],
    CXXFLAGS=['-std=c++14', '-O3', '-Wall', '-Wextra'],
    LINKFLAGS=[],
    SHLIBPREFIX='',
)

dEnvironment = Environment(
    tools=['ldc', 'link'],
    ENV=os.environ,
    DFLAGS=['-O', '-release', '-inline'],
    SHLIBPREFIX='',
)

for item in Glob('*_library_*.c'):
    cEnvironment.SharedLibrary(splitext(item.name)[0] + '.so', item)

for item in Glob('*_library_*.cpp'):
    cppEnvironment.SharedLibrary(splitext(item.name)[0] + '.so', item)

for item in Glob('*_library_*.d'):
    dEnvironment.SharedLibrary(splitext(item.name)[0] + '.so', item)


for item in Glob('*.pyx'):
    root, _ = splitext(item.name)
    cythonEnvironment.SharedLibrary(root + '.so', Command(root + '.c', item, '{} $SOURCE'.format(cython_command_name)))

cppExtensionEnvironment = cppEnvironment.Clone()
cppExtensionEnvironment.Append(CXXFLAGS='-fPIC')
cppExtensionEnvironment.Append(CPPPATH=python_include_path)
cppExtensionEnvironment.Append(RPATH='./')
cppExtensionEnvironment.Append(LIBS='-lboost_python3')#Fedora
#cppExtensionEnvironment.Append(LIBS='-lboost_python_py34')#Debian

for item in Glob('*_extension_*.cpp'):
    cppExtensionEnvironment.SharedLibrary(splitext(item.name)[0] + '.so', item, SHLIBPREFIX='')
