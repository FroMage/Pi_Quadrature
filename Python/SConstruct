# -*- mode:python; coding:utf-8; -*-

#  Calculation of π using quadrature.
#
#  Copyright © 2008–2014  Russel Winder

#  Some of the Python code relies on extensions written in various languages.
#
#  Cython and Pyrex need access to the Python headers when compiling the generated C and so are Python
#  version dependent.

import os
from os.path import splitext

cEnvironment = Environment(
    tools=['gcc', 'gnulink'],
    CPPPATH=[],
    CFLAGS=['-std=c99', '-O3', '-Wall', '-Wextra'],
    LINKFLAGS=[],
    SHLIBPREFIX='',
)

cythonEnvironment = cEnvironment.Clone()
cythonEnvironment.Append(CPPPATH=['/usr/include/python3.4'], CFLAGS=['-fopenmp'], LIBS=['-lgomp'])

cppEnvironment = Environment(
    tools=['g++', 'gnulink'],
    CPPPATH=[],
    CXXFLAGS=['-std=c++1y', '-O3', '-Wall', '-Wextra'],
    LINKFLAGS=[],
    SHLIBPREFIX='',
)

dEnvironment = Environment(
    tools=['ldc', 'link'],
    ENV=os.environ,
    DFLAGS=['-O', '-release'],
    SHLIBPREFIX='',
)

for item in ('processSlice_c.c',):
    cEnvironment.SharedLibrary(splitext(item)[0] + '.so', item)

for item in ('processSlice_cpp.cpp',):
    cppEnvironment.SharedLibrary(splitext(item)[0] + '.so', item)

for item in Glob('*.pyx'):
    root, _ = splitext(item.name)
    cythonEnvironment.SharedLibrary(root + '.so', Command(root + '.c', item, 'cython3 $SOURCE'))

for item in Glob('*.d'):
    dEnvironment.SharedLibrary(splitext(item.name)[0] + '.so', item)
